version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: gsc_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  strapi:
    image: strapi/strapi:latest
    container_name: gsc_strapi
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "1337:1337"
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./apps/cms:/srv/app

volumes:
  postgres-data:
  strapi-data:

# Uso:
# 1) cp .env.example .env
# 2) docker compose up -d
# 3) Abre http://localhost:1337 y crea el usuario admin
# La primera vez, Strapi generar√° el proyecto dentro de ./apps/cms
